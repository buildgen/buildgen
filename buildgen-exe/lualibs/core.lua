-- Copyright 2011-2012 Kevin Cox

--[[---------------------------------------------------------------------------]
[                                                                              ]
[  This software is provided 'as-is', without any express or implied           ]
[  warranty. In no event will the authors be held liable for any damages       ]
[  arising from the use of this software.                                      ]
[                                                                              ]
[  Permission is granted to anyone to use this software for any purpose,       ]
[  including commercial applications, and to alter it and redistribute it      ]
[  freely, subject to the following restrictions:                              ]
[                                                                              ]
[  1. The origin of this software must not be misrepresented; you must not     ]
[     claim that you wrote the original software. If you use this software in  ]
[     a product, an acknowledgment in the product documentation would be       ]
[     appreciated but is not required.                                         ]
[                                                                              ]
[  2. Altered source versions must be plainly marked as such, and must not be  ]
[     misrepresented as being the original software.                           ]
[                                                                              ]
[  3. This notice may not be removed or altered from any source distribution.  ]                                                           *
[                                                                              ]
[-----------------------------------------------------------------------------]]

--- Add A Generator
--
-- @param inputs A list of files that the outputs depend on.  They are treated
--	as BuildGen paths.
-- @param command A list of arguments.  The first item in the list (arg 0) is
--	treated as a BuildGen path.
-- @param outputs A list of files that are generated by executing the command.
--	They are treated as BuildGen paths.
-- @param options A table of options.  The following values are currently
--	supported.
--	<ul><li>
--		description: A description of what the command is doing.
--	</li><li>
--		magic: If true target will be treated as a
--		<a href="https://gitorious.org/buildgen/pages/UserDocs_Targets">magic
--		target</a>.
--	</li><li>
--		magicsrc: If true dependency will be treated as a
--		<a href="https://gitorious.org/buildgen/pages/UserDocs_Targets">magic
--		target</a>.
--	</li><ul>
--
-- @class function
-- @name C.addGenerator

--- Add A Dependancy
--
-- Add dependency to target.  This ensures that dependancy exist before target
-- is build and that targert is rebuilt when target is updated.
--
-- @param target A list of files that are generated by executing the command.
--	They are treated as BuildGen paths.
-- @param dependency A list of files that the outputs depend on.  They are treated
--	as BuildGen paths.
-- @param options A table of options.  The following values are currently
--	supported.
--	<ul><li>
--		magic: If true target will be treated as a
--		<a href="https://gitorious.org/buildgen/pages/UserDocs_Targets">magic
--		target</a>.
--	</li><li>
--		magicsrc: If true dependency will be treated as a
--		<a href="https://gitorious.org/buildgen/pages/UserDocs_Targets">magic
--		target</a>.
-- </li><ul>
--
-- @class function
-- @name C.addDependancy

--- Add A Directory
--
-- Add dir to the build.
--
-- @param dir A BuildGen path.
--
-- @class function
-- @name C.addDir

--- Resolve a BuildGen path.
--
-- Returns the absolute path refrenced by the BuildGen path path.
--
-- @param path A BuildGen path.
-- @return A (dumb) normalized absolute pathname.  (Symlinks are not resolved)
--
-- @class function
-- @name C.path

--- Resolve a path passed as a define.
--
-- Replaces the value in the D prefix with an abosolute path.  The path is
-- treated as relitive to the directory form which BuildGen was called.  This
-- should be used whenever trating a value defined on the command line as a
-- path.  If this is not used relitave paths will not be relitive to the
-- direcotory the caller expects.
--
-- @param path The key of the defined value.
-- @param default The value to be put if the value is not defined.  Defaults to
--	nil.
function D.resolvePath ( path , default )
	if not D[path] then
		D[path] = default
	end

	if not D[path] then return end -- If the default was nil.

	if D[path]:sub(0,1) ~= "/" then -- Doesn't start with a slash.
		D[path] = C.path(">"..D[path])
	end
end

dofile(S.lualibsRoot.."stdlib.lua")
