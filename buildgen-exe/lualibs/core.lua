--- The C Namespace
-- The core BuildGen functions.
-- @module C

-- Copyright 2011-2012 Kevin Cox

--[[ --------------------------------------------------------------------------]
[                                                                              ]
[  This software is provided 'as-is', without any express or implied           ]
[  warranty. In no event will the authors be held liable for any damages       ]
[  arising from the use of this software.                                      ]
[                                                                              ]
[  Permission is granted to anyone to use this software for any purpose,       ]
[  including commercial applications, and to alter it and redistribute it      ]
[  freely, subject to the following restrictions:                              ]
[                                                                              ]
[  1. The origin of this software must not be misrepresented; you must not     ]
[     claim that you wrote the original software. If you use this software in  ]
[     a product, an acknowledgment in the product documentation would be       ]
[     appreciated but is not required.                                         ]
[                                                                              ]
[  2. Altered source versions must be plainly marked as such, and must not be  ]
[     misrepresented as being the original software.                           ]
[                                                                              ]
[  3. This notice may not be removed or altered from any source distribution.  ]                                                           *
[                                                                              ]
[-----------------------------------------------------------------------------]]

--- Add A Generator
--
-- @tparam {string,...} inputs A list of files that the outputs depend on.  They
-- are treated as BuildGen paths.
-- @tparam {string,...} command A list of arguments.  The first item in the list
-- (arg 0) is treated as a BuildGen path.
-- @tparam {string,...} outputs A list of files that are generated by executing
-- the command.  They are treated as BuildGen paths.
-- @tparam {description=string,magic=boolean,magicsrc=boolean} options A table
-- of options.  The following values are currently supported.
--
-- - description: A description of what the command is doing.
-- - magic: If true target will be treated as a
--   [magic target](https://gitorious.org/buildgen/pages/UserDocs_Targets).
-- - magicsrc: If true dependency will be treated as a
--   [magic target](https://gitorious.org/buildgen/pages/UserDocs_Targets).
--
-- @class function
-- @name C.addGenerator

--- Add A Dependancy
--
-- Add dependency to target.  This ensures that dependancy exist before target
-- is build and that targert is rebuilt when target is updated.
--
-- @tparam {string,...} target A list of files that are generated by executing the command.
--  They are treated as BuildGen paths.
-- @tparam {string,...} dependencies A list of files that the outputs depend on.  They are treated
-- as BuildGen paths.
-- @tparam {magic=boolean,magicsrc=boolean} options A table of options.  The
-- following values are currently supported.
--
-- - magic: If true target will be treated as a
--   [magic target](https://gitorious.org/buildgen/pages/UserDocs_Targets).
-- - magicsrc: If true dependency will be treated as a
--   [magic target](https://gitorious.org/buildgen/pages/UserDocs_Targets).
--
-- @class function
-- @name C.addDependancy

--- Add A Directory
--
-- Add dir to the build.
--
-- @tparam string dir A BuildGen path.
--
-- @class function
-- @name C.addDir

--- Resolve a BuildGen path.
--
-- Returns the absolute path refrenced by the BuildGen path path.
--
-- @tparam string path A BuildGen path.
-- @treturn string A (dumb) normalized absolute pathname.  (Symlinks are not
-- resolved)
--
-- @class function
-- @name C.path

do
local status, err = pcall(dofile, S.lualibsRoot.."stdlib.luo")
if not status then dofile(S.lualibsRoot.."stdlib.lua") end
end
